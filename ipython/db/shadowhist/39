(dp1
Vfig.draw()
p2
I2268
sV%run explain_slic2.py
p3
I2359
sVxs = np.vstack([d.X, np.zeros((1, d.ninstances), dtype=numpy.int)])
p4
I3455
sVm = re.match(r"([^,]+,)+", "bla,blaf,")
p5
I6522
sVX3
p6
I5722
sVw = bdf.BDFWriter('../data/fre-p300-full-5.bdf', values=values)
p7
I5055
sVd = golem.DataSet.load('s9.dat')
p8
I258
sVnumpy.mean( d2.xs[d2.ys[:,0],0] )
p9
I2220
sVd2 = psychic.slice(d, mdict, (-200, 200))
p10
I4128
sVm.groups
p11
I6505
sVtraining.get_class(0).X.dot(training.get_class(1).X.T)
p12
I5516
sVcongruent_pairs[congruent_ind==2]
p13
I5469
sVa+b
p14
I545
sVpsychic.plot_timeseries( d3.ndX.reshape(8,-1) )
p15
I4733
sVnp.rollaxis(training.ndX, 1).shape
p16
I5290
sVnp.rollaxis(b,-1).reshape(-1,2).T
p17
I5275
sVd2.Y[:6,:]
p18
I5086
sVnp.rollaxis(np.tile(a, [3,1,1]), 1).shape
p19
I5232
sVfor i in range(50):\u000a    mdict[50+i] = 1
p20
I3613
sVdev.bcdUs
p21
I856
sVd.ys[targets,0]
p22
I4758
sVw.physical_max
p23
I2426
sVfft.FFTFilter?
p24
I3787
sVclass0.shape
p25
I313
sVd.ys[2]
p26
I650
s.