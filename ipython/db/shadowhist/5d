(dp1
V800/float(250)
p2
I3728
sVnumpy.nonzero(ids == 1)
p3
I2758
sVeegplot.plot_erp(d2, 100, classes=[1,2], vspace=10 )
p4
I4230
sVfrom PyQt4.QtGui import QFormLayout
p5
I6314
sVd = training
p6
I5497
sVbdf.int24_to_le( numpy.array([d.xs[129,0]]) )
p7
I2611
sVtraining.Y.cl_lab
p8
I5192
sVclassifiers
p9
I6438
sVnoise_node.train(d)
p10
I1126
sV:q
p11
I2250
sVeegplot.plot_erp(d2, 1000, feat_lab=d.feat_lab, baseline_period=(800, 1000), start=1.0)
p12
I6328
sVnp.rollaxis(b,3).reshape(2,9)
p13
I5256
sV\u005c
I2819
sVmdict = {1:'target', 2:'nontarget', 3:'nontarget', 4:'nontarget', 5:'nontarget', 6:'nontarget'}
p14
I4429
sV37/1000
p15
I6069
sVd2 = psychic.slice(d3, {1:'target', 2:'nontarget'}, (-50, 500))
p16
I3796
sVplot.plot(d5.nd_xs[100:120,:,5].T, '-k')
p17
I1490
sVany(any(abs(d3.ndX) > 100, axis=0), axis=0).shape
p18
I6590
sVd3.nd_xs[d3.ys[:, 1].astype(bool),:,:].shape
p19
I4358
sVplt.ylim(0.5,1)
p20
I2858
sVd2.nx_xs.shape
p21
I75
sVeegplot.plot_eeg(d, 1, spectogram=False )
p22
I2232
sVnumpy.sin(a)
p23
I1025
sVplt.plot(avg)
p24
I3279
sVnp.rollaxis(np.tile(a.T, [3,1,1]), 2)[:,:,3]
p25
I5245
sVdiff(m[:,0])
p26
I5864
sVd2.Y[training_pairs,:]
p27
I5175
sVys2 = np.hstack(ys)
p28
I152
sVb = numpy.array([1,2,3,4,5,6], [1,2,3,4,5,6])
p29
I926
sVeegplot.plot_erp(d2, 128, 50)
p30
I3744
sVthres_node_20.hi
p31
I333
sVfor i in range(1,7):
p32
I4404
s.