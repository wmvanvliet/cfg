(dp1
Vdata.shape
p2
I2949
sVnonzero(d3.ys)
p3
I4193
sVa = numpy.arange(10.0) * (19/9.0)
p4
I1356
sVbob = bank.Client("Bob")
p5
I1210
sVpsychic.plot_timeseries( np.mean(d2.nd_xs[[1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20],:,:], axis=0) )
p6
I4619
sVr = fd.astype(numpy.int)[1:] - fd.astype(numpy.int)[:-1]
p7
I2709
sVplt.bar( d.Y[np.nonzero(d.Y)] )
p8
I3410
sVeegplot.plot_erp(d2[:100], target_samplerate, enforce_equal_n=True, feat_lab=d.feat_lab)
p9
I4865
sV13500-13473
p10
I580
sVd.xs[204:214,:]
p11
I2521
sV10/4.0 == 2.499999999
p12
I5609
sVa =  np.rollaxis(training.ndX,-1).reshape(-1,8)
p13
I5267
sVplt.plot(classifier.data.ys)
p14
I662
sVnumpy.atleast_2d(detected_points).repeat(2, axis=0).reshape(2, 10)
p15
I2192
sVplt.figure(figsize=(6,6));
p16
I2309
sVbytes[:, 0] = uints & 0xff
p17
I1785
sVacc_array[imec,:].T.shape
p18
I2294
sVnontargets
p19
I3838
sVeegplot.plot_erp( erp.erp(d2, (100,200), classes=range(1,7)), 1000 )
p20
I4297
sVeegplot.plot_erp( erp.erp(d3), 100 )
p21
I4247
sV3.8 + -0.2 + (1/2) * 0 + (1/6) * -0.6 + (1/24) * -1.2
p22
I527
sVnumpy.atleast_2d(real_points).repeat(2, axis=0).
p23
I2171
sVtest = targets[30:] + nontargets[30:61]
p24
I4480
sVeegplot.plot_erp(d3[:-1], 1000, vspace=15, baseline_period=(500, 1000))
p25
I6218
sVd2 = golem.DataSet(xs=xs, default=d)
p26
I2248
sVeegplot.plot_eeg(d3[1000:2000])
p27
I3999
sVpos[:10]
p28
I4109
s.