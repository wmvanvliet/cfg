(dp1
Va.repeat(12, axis=0).T.reshape([120,1])
p2
I1337
sVw.records_written
p3
I1826
sV%vim blaat-config.xml
p4
I2839
sVclasses = numpy.zeros([self.data.ninstances 2]) == 0
p5
I613
sVplt.plot(ca.T)
p6
I2938
sVcl.d2
p7
I4992
sVplt.legend(loc='mcenter right')
p8
I2281
sVtraining
p9
I5184
sVbin( (test[4] << 4) & 0xf0)
p10
I405
sVplot(d2.nd_xs[:,:,0] )
p11
I3713
sVlo = numpy.array( numpy.floor( numpy.linspace(0,4,10) ), dtype=numpy.int )
p12
I1698
sVc
I550
sVX4 = np.rollaxis(X3.T, 1,1)
p13
I5432
sVplt.axhline(thres_node.lo, color='g')
p14
I1877
sVpre = golem.nodes.Chain([psychic.nodes.OnlineFilter( lambda s : scipy.signal.iirfilter(3, [0.3/(s/2.0), 15/(s/2.0)]) ), resample.Resample(100)])
p15
I5851
sVd2 = d[142489:172538]
p16
I2341
sVd.Y[0,:10]
p17
I5921
sVxs.shape
p18
I1115
sVsys.exc_info()[0]
p19
I5540
sVthres_node = thres.Threshold()
p20
I218
sV%run window_sizes.py
p21
I2251
sVa = numpy.tile( 100*numpy.arange(0, 6), (5732,1) )
p22
I951
sVmouse = []
p23
I3089
sVnp.cov(training.get_class(0).X)
p24
I5496
sVpsychic.get_samplerate(d)
p25
I1680
sVtraining = d2[ np.any(d2.Y[training_pairs,:], axis=0) ]
p26
I5182
sVnp.arange(0.5, 1.0, 0.1)
p27
I4728
sVd.X.shape
p28
I3422
sVgolem.perf.mean_std(golem.perf.accuracy, golem.cv.cross_validate(golem.cv.seq_splits(d3,5), svm))
p29
I4629
sVplt.ylim(0,1)
p30
I2259
s.