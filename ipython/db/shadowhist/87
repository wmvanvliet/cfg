(dp1
Vgolem.helpers.hard_max(pred.X)
p2
I3961
sVexit()
p3
I113
sVd2 = psychic.slice(d, mdict, (-300, 300))
p4
I3664
sVylim(6/7.0, 1)
p5
I6420
sVeegplot.plot_erp(d2[:2], 1000, 100, baseline_period=(0, 500))
p6
I3677
sVplt.plot( np.mean(acc_array[imec,:], axis=0) )
p7
I3334
sVpsychic.plot_timeseries( np.rollaxis(training.ndX.T,-1).reshape(8,-1).T )
p8
I5261
sVa = numpy.array([2,5,3])
p9
I1535
sV10/128.0
p10
I1899
sVnp.any(d2.Y[training_pairs,:], axis=0).shape
p11
I5179
sV128*3
p12
I2585
sVtrain.Y[0,:100]
p13
I6387
sVeegplot.plot_eeg(d4,1/60.0)
p14
I1417
sVd.ys = ys2
p15
I161
sVa = numpy.atleast_2d(a)
p16
I1329
sVd4 = psychic.slice(d3, {1:'target', 2:'nontarget'}, (0, 500))
p17
I4416
sVeegplot.plot_erp(d2[260], target_samplerate, enforce_equal_n=True, feat_lab=d.feat_lab)
p18
I4863
sVscipy.signal.butter?
p19
I5058
sVm.group(2)
p20
I5995
sVys[:,0]
p21
I2213
sVscipy.signal.filtfilt?
p22
I1088
sVxs = np.vstack([d.X, np.zeros(8, d.ninstances, dtype=numpy.int)]) - np.atleast_2d(np.mean(d.X, axis=0)).repeat(9, axis=0)
p23
I3451
sVa.shape[1]
p24
I6255
sVd.ninstances_per_class
p25
I6322
s.