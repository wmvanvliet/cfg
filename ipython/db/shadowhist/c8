(dp1
Vto_idx = numpy.nonzero(d2.ys == 2)[0][-1]
p2
I2780
sVnumpy.atleast_2d( (X+Y).reshape( len(a)*len(b) ) ).repeat(8, axis=0)
p3
I1652
sVipy_editors??
p4
I2841
sVeegplot.plot_eeg(d[-300:])
p5
I4517
sVdrift = np.loadtxt('drift.log', delimiter=',', skiprows=1, usecols = (1,2,3,4,5))
p6
I6021
sVb = golem.DataSet(X = W.dot(training.ndX.reshape(8,-1) )
p7
I5298
sVpreprocessing = golem.nodes.Chain([bp_node, ica_node, window_node, slic_node])
p8
I742
sVplt.plot(acc_array.T)
p9
I2855
sVcquit()
p10
I4155
sVd = d[25710:3181]
p11
I2680
sVstr(w.physical_min)
p12
I2427
sVblock.get_class(option_num)
p13
I5695
sVtraining.Y.shape
p14
I5191
sVdev.iManufacturer
p15
I848
sVw = bdf.BDFWriter('../data/do-1-channels.bdf', values=values)
p16
I4837
sVnumpy.nonzero(d.ys == 3)
p17
I2782
sVplt.figure
p18
I28
sVscipy.stats.binom_test(4,20)
p19
I3027
sVX2 = np.rollaxis(X.reshape(8, 74, 100), 1, )
p20
I5336
sVhi-lo
p21
I1700
sVw.prefiltering = w.prefiltering[:6]
p22
I2439
sVI
I3418
sVeegplot.plot_erp(d2, 100, baseline_period=(0,10), feat_lab=d.feat_lab)
p23
I5072
sVimport psycho
p24
I830
sVd = res_node.apply(d)
p25
I4524
sVa2[:,0] == freq
p26
I1390
sVeegplot.plot_erp( mean_node.apply(d2), 100 )
p27
I5757
s.